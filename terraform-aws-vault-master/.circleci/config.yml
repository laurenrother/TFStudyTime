---
version: 2
jobs:
  validate_terraform:
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run:
          name: Validate Terraform Formatting
          command: "[ -z \"$(terraform fmt -write=false)\" ] || { terraform fmt -write=false -diff; exit 1; }"

  build:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-{{ checksum "test/Gopkg.lock" }}
            - external-dep
      - run: echo 'export PATH=$HOME/terraform:$HOME/packer:$PATH' >> $BASH_ENV
      # Domain name of Route 53 hosted zone to use at test time
      - run: echo 'export VAULT_HOSTED_ZONE_DOMAIN_NAME=gruntwork.in' >> $BASH_ENV

      # Install the gruntwork-module-circleci-helpers and use it to configure the build environment and run tests.
      - run: curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version v0.0.21
      - run: gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.13.9"
      - run: gruntwork-install --module-name "build-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.13.9"
      - run: gruntwork-install --module-name "aws-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.13.9"
      - run: gruntwork-install --module-name "git-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.13.9"
      - run: gruntwork-install --binary-name "terratest_log_parser" --repo "https://github.com/gruntwork-io/terratest" --tag v0.13.10
      - run: configure-environment-for-gruntwork-module --go-src-path test --use-go-dep --circle-ci-2 --circle-ci-2-machine-executor

      - save_cache:
          key: external-dep
          paths:
            - $HOME/terraform
            - $HOME/packer
            - $HOME/dep
      - save_cache:
          key: dep-{{ checksum "test/Gopkg.lock" }}
          paths:
            - $HOME/.go_workspace/src/github.com/hashicorp/terraform-aws-vault/test/vendor
      - run: mkdir -p /tmp/logs
      - run: run-go-tests --path test | tee /tmp/logs/all.log
      - run:
          command: terratest_log_parser --testlog /tmp/logs/all.log --outputdir /tmp/logs
          when: always
      - store_artifacts:
          path: /tmp/logs
      - store_test_results:
          path: /tmp/logs

      # We generally only want to build AMIs on new releases, but when we are setting up AMIs in a new account for the
      # first time, we want to build the AMIs but NOT run automated tests, since those tests will fail without an existing
      # AMI already in the AWS Account.
      - deploy:
          command: |
            if [[ $CIRCLE_BRANCH == "publish-amis" || -n $CIRCLE_TAG ]]; then
              ./_ci/publish-amis.sh "ubuntu16-ami"
              ./_ci/publish-amis.sh "amazon-linux-ami"
            fi
